import java.util.List;

// Encapsulation for property details
class Property {
    private final String name;
    private final double rentAmount;
    private final String ownerName;
    private final String location;

    public Property(String name, double rentAmount, String ownerName, String location) {
        if (name == null || ownerName == null || location == null || rentAmount < 0) {
            throw new IllegalArgumentException("Invalid property details.");
        }
        this.name = name;
        this.rentAmount = rentAmount;
        this.ownerName = ownerName;
        this.location = location;
    }

    public String getName() {
        return name;
    }

    public double getRentAmount() {
        return rentAmount;
    }

    public String getOwnerName() {
        return ownerName;
    }

    public String getLocation() {
        return location;
    }
}

// Service for property analytics
class PropertyAnalytics {
    private static final double PREMIUM_THRESHOLD = 2000.0;

    public static boolean isPremiumProperty(Property property) {
        return property.getRentAmount() > PREMIUM_THRESHOLD;
    }

    public static double calculateYearlyRent(Property property) {
        return property.getRentAmount() * 12;
    }
}

// Generates financial reports
class FinancialReport {
    private final String reportTitle;
    private final List<Property> properties;

    public FinancialReport(String reportTitle, List<Property> properties) {
        if (reportTitle == null || properties == null) {
            throw new IllegalArgumentException("Report title and properties must be non-null.");
        }
        this.reportTitle = reportTitle;
        this.properties = properties;
    }

    public void generateReport() {
        double totalRent = 0;

        System.out.println("Financial Report: " + reportTitle);
        System.out.println("----------------------------");

        for (Property property : properties) {
            totalRent += property.getRentAmount();
            printPropertyDetails(property);
        }

        System.out.println("Total Rent Amount: $" + totalRent);
        System.out.println("----------------------------");
    }

    private void printPropertyDetails(Property property) {
        System.out.println("Property: " + property.getName());
        System.out.println("Rent Amount: $" + property.getRentAmount());
        System.out.println("Owner: " + property.getOwnerName());
        System.out.println("Location: " + property.getLocation());

        if (PropertyAnalytics.isPremiumProperty(property)) {
            System.out.println("Category: Premium Property");
        } else {
            System.out.println("Category: Standard Property");
        }

        double yearlyRent = PropertyAnalytics.calculateYearlyRent(property);
        System.out.println("Yearly Rent: $" + yearlyRent);
        System.out.println("----------------------------");
    }
}

// Main class for testing
public class ReportGenerator {
    public static void main(String[] args) {
        List<Property> properties = List.of(
            new Property("Apartment A", 1500.0, "John Doe", "City Center"),
            new Property("House B", 2000.0, "Jane Smith", "Suburb"),
            new Property("Condo C", 1800.0, "Bob Johnson", "Downtown")
        );

        FinancialReport financialReport = new FinancialReport("Monthly Rent Summary", properties);
        financialReport.generateReport();
    }
}
